#!/usr/bin/env zsh


dnscrypt-proxy-conf() {
	rconf=""
	# load dhcp leases in redis
	for i in ${(f)"$(cat $H/run/leases)"}; do
		rconf+="SET dns-lease-${i[(w)4]} ${i[(w)3]}\n"
		rconf+="SET dns-lease-${i[(w)4]}.dowse.it ${i[(w)3]}\n"

		# and the hosts reverses
		rconf+="SET dns-reverse-${i[(w)3]}. ${i[(w)4]}\n"
		
	done
	# load the local hosts known
	rconf+="SET dns-lease-${hostname}          ${address}\n"
	rconf+="SET dns-lease-${hostname}.dowse.it ${address}\n"
	rconf+="SET dns-lease-www.dowse.it         ${address}\n"
	rconf+="SET dns-lease-dowse.it             ${address}\n"
	rconf+="SET dns-lease-gateway    ${wan}\n"
	# load the local hosts reverses
	rconf+="SET dns-reverse-${address}. ${hostname}.dowse.it\n"
	rconf+="SET dns-reverse-${wan}. gateway\n"
	print $rconf | redis dynamic
}

dnscrypt-proxy-exec() {

	args=""
	[[ $* =~ cache ]] && args+=",cache"
	[[ $* =~ debug ]] && args+=",debug"
	[[ $* =~ offline ]] && args+=",offline"


	func "Launching dnscrypt-proxy to listen on port 53"

    if [[ $DEBUG = 1 ]]; then
		DOWSE_DOMAINLIST=`pwd`/src/domain-list/data \
						DOWSE_LAN_ADDRESS_IP4=$address \
						hostname=$hostname \
						domain=$lan \
						launch dnscrypt-proxy -a $address:53 \
						-l $H/log/dnscrypt.log \
						-r "178.216.201.222:2053" \
						-k "25C4:E188:2915:4697:8F9C:2BBD:B6A7:AFA4:01ED:A051:0508:5D53:03E7:1928:C066:8F21" \
						-N "2.dnscrypt-cert.soltysiak.com" \
						-X $R/lib/dnscrypt-proxy/dnscrypt_dowse.so${args},debug \
						-m 7 -u $dowse_uid
		# log level informational (7 for debug)
		return $?

    else
		ztmp
		DOWSE_DOMAINLIST=$R/domain-list/data \
						DOWSE_LAN_ADDRESS_IP4=$address \
						hostname=$hostname \
						domain=$lan \
						launch dnscrypt-proxy -a $address:53 \
						-p $ztmpfile -l $H/log/dnscrypt.log \
						-r "178.216.201.222:2053" \
						-k "25C4:E188:2915:4697:8F9C:2BBD:B6A7:AFA4:01ED:A051:0508:5D53:03E7:1928:C066:8F21" \
						-N "2.dnscrypt-cert.soltysiak.com" \
						-X $R/lib/dnscrypt-proxy/dnscrypt_dowse.so${args} \
						-d -m 4 -u $dowse_uid
		# log only warning conditions

    fi
    sleep 1
	# avoid race condition

    savepid dnscrypt-proxy $ztmpfile

    # TODO: offer a list of hosts from the csv list provided in dnscrypt source
}
