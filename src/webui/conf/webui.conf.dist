# webui conf
# requires kore build with NOTLS=1

bind		0 80

# added by compile.sh:
# chroot    $H
# runas		$dowse_uid
# pidfile   /run/webui.pid

# TODO: check if its correct ....
#validator   v_ip4_addr  regex   ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
validator   v_ip4_addr   regex   ^([0-9]{1,3}[.]){3}([0-9]{1,3})$
validator   v_ip6_addr   regex   ^([0-9A-Fa-f]{1,4}[:]){7}([0-9A-Fa-f]{1,4})$
validator   v_macaddr   regex   ^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$
validator   v_filename  regex   ^.*$
validator   v_command   regex   ^(on)|(off)|(monitor)|(admin)$
validator   v_ip_valid  function v_ip_validate

authentication auth_admin {
	authentication_type request
	authentication_validator	v_ip_valid	
}

domain * {

    # generic assets
    static /		serve_asset
	params get / {
		   validate o v_filename
	}


    # TODO: command pipeline
	static     /cmd	   queue_command
	params get /cmd {
	 	validate op  v_command
	 	validate macaddr v_macaddr
	 	validate ip4 v_ip4_addr
	 	validate ip6 v_ip6_addr
	}

    # TODO: command pipeline
	# static /cmd		queue_command
	# params get / {  validate op  v_command
	# 	   	   	    validate mac v_macaddr }

	# dynamic pages
	static	   /things/all      things_list
    static     /things          thing_show
	params get /things {
		   validate macaddr v_macaddr
	}

	# Configure admin page
	static /configure_admin configure_admin
	
	# Test Admin authentication
	static /test_admin test_admin auth_admin

	# special static assets
	static     /example/websocket.html  websocket_example

}
