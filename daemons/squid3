#!/usr/bin/env zsh


squid-extract() {
    fn extract-squid

    [[ -r $R/run/squid3 ]] && return 0

    deb-download squid3
    deb-download squid3-common
    deb-download libecap2

    cp $R/tmp/usr/sbin/squid3 $R/run \
        && cp $R/tmp/usr/lib/libecap.so.2.0.0       $R/run/libecap.so.2 \
        && cp $R/tmp/usr/share/squid3/mime.conf     $R/run/squid.mime \
        && cp $R/tmp/usr/lib/squid3/unlinkd         $R/run/squid.unlinkd \
        && cp $R/tmp/usr/lib/squid3/log_file_daemon $R/run/squid.logfiled \
        && cp -r $R/tmp/usr/share/squid3/icons      $R/run/squid.icons \
            || {
            error "squid3 binaries not found"
            return 1 }

    act "squid3 binaries imported"
    func "`ls $R/tmp`"

    rm -rf $R/tmp

    func "`file $R/run/squid3`"
}

squid-conf() {
    # Squid2 configuration template
    func "generating base configuration for squid3"
    cat <<EOF
mime_table $R/run/squid.mime
unlinkd_program $R/run/squid.unlinkd
logfile_daemon $R/run/squid.logfiled
icon_directory $R/run/squid.icons
cache_effective_user $dowse_uid
cache_store_log none

# avoid having a physical cache directory
cache deny all
cache_mem 16 MB
# cache_dir null /tmp
# cache_dir aufs /dev/shm/dowse 64 16 64
maximum_object_size 16 MB
maximum_object_size_in_memory 1 MB
minimum_object_size 16 KB
memory_pools off

# dns client section
dns_nameservers 127.0.0.1
hosts_file $R/run/hosts
append_domain .$lan
positive_dns_ttl 8 hours
negative_dns_ttl 30 seconds

acl all src all
# acl manager proto cache_object
acl localhost src 127.0.0.1/32
acl to_localhost dst 127.0.0.0/8 0.0.0.0/32

acl localnet src $dowse_net

acl SSL_ports port 443		# https
acl Safe_ports port 80		# http
acl Safe_ports port 443		# https
acl purge method PURGE
acl CONNECT method CONNECT

# http_access allow manager localhost
# http_access deny manager
# http_access allow purge localhost
http_access deny purge
http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports

http_access allow localnet
# http_access allow localhost

http_access deny all

icp_access allow localnet


visible_hostname ${hostname}.${lan}

hierarchy_stoplist cgi-bin ?

refresh_pattern ^ftp:		1440	20%	10080
refresh_pattern ^gopher:	1440	0%	1440
refresh_pattern -i (/cgi-bin/|\?) 0	0%	0
refresh_pattern -i (deb|tar|gz|tgz|bz2|zip|rar|msi|exe|rpm)$ 0 90% 1440
refresh_pattern (Release|Packages(.gz)*)$	0	20%	2880
refresh_pattern .		0	20%	4320

acl shoutcast rep_header X-HTTP09-First-Line ^ICY.[0-9]
# upgrade_http0.9 deny shoutcast

acl apache rep_header Server ^Apache
# broken_vary_encoding allow apache

# extension_methods REPORT MERGE MKACTIVITY CHECKOUT

cache_mgr Dowse

hosts_file $R/run/hosts

coredump_dir $R/log

never_direct allow all

# header_access From deny all

# the settings below are restrictive:
# they grant more privacy but break many websites!
# header_access Link deny all
# header_access Server deny all
# header_access Referer deny all
# header_access User-Agent deny all
# header_access WWW-Authenticate deny all


EOF

    [[ $DEBUG = 0 ]] || {
        cat <<EOF
debug_options rotate=9 ALL,3
EOF
    }
}

squid-start() {
    fn squid-start
    req=(dowse_uid)
    conf=$1
    freq=($conf)
    ckreq || return 0

    act "launching squid3"

    # # populate the volatile cache
    # setuidgid $dowseuid squid3 -z -f "$1"
    # launch the squid
    if [[ -z $root ]]; then
        LD_LIBRARY_PATH=$R/run $R/run/squid3 -f $conf $*
    else
        LD_LIBRARY_PATH=$R/run setuidgid $dowse_uid $R/run/squid3 -f $conf $*
#        LD_LIBRARY_PATH=$R/run $R/run/squid3 -f $conf $*
    fi

}

squid-stop() {
    fn squid-stop
    pidfile=$1
    freq=($pidfile)
    ckreq || return 0

    pid=`cat $pidfile`
    act "Stopping squid ($pid)"
    if [[ -z $root ]]; then
        LD_LIBRARY_PATH=$R/run $R/run/squid3 -f $R/run/squid.conf -k kill
    else
        LD_LIBRARY_PATH=$R/run setuidgid $dowse_uid $R/run/squid3 -f $R/run/squid.conf -k kill
#        LD_LIBRARY_PATH=$R/run $R/run/squid3 -f $R/run/squid.conf -k kill
    fi

    waitpid $pid
    rm -f $pidfile

}
