#!/bin/bash

#--- Purge host in state = "down"
cat nmap.xml| xmlstarlet ed -d '/nmaprun/host[status[@state="down"]]'  > nmap2.xml
mv nmap2.xml nmap.xml

#--- 
function selectXPath() {
	XPATH=$1
	INFILE=nmap.xml
#	set -x
	xmlstarlet sel -t -v $XPATH ${INFILE}
#	set +x
}

COUNT=`selectXPath "count(/nmaprun/host)" `



#--- Queste nmap non le tira fuori e/o non ci interessano
_dhcp=""
_gateway=""
_network=""
_last=""
_age=""
_iface=""
_state=""
		
		
THINGS_DB=../../build/db/thing.idx

export LIST=()
#--- Queste stringhe le leggeremo dal file things.idx		
for i in $(cat $THINGS_DB |grep "/"| awk '{print $1}'); do
 LIST+=$i" "
done	
echo "--- Finding value for ($LIST) on $COUNT hosts in \"up\" state..."


#---- Creiamo un file che "source" istanzia le variabili 
VAR_FILE=.var_file ; rm -f $VAR_FILE
COL_DECL=""
for k in $LIST ; do
 A=xpath_$k
 STR=$(grep "/" $THINGS_DB |grep ";" |grep "\b$k\b"|awk -F\; '{print $2}' | tr -d ' ')
 echo "export xpath_$k=$STR">> $VAR_FILE
 if [ "x" == "x$COL_DECL" ]; then
	export COL_DECL="$k"
 else
	export COL_DECL="$COL_DECL,$k"
 fi
done

source $VAR_FILE
#------

for ((i=1;i<=$COUNT;i++)); do	
	echo "--- $i :> $LIST"
	source $VAR_FILE	
	echo -n "INSERT INTO found ( $COL_DECL ) VALUES ("
	export VALUES=""
	for column in $LIST ; do 
		A=xpath_$column
		xpathStr=${!A}
#		echo "[$xpathStr]"
		val=`selectXPath ${xpathStr}`
		if [ "x" == "x$VALUES" ]; then
			export VALUES="'$val'"
		else
			export VALUES="$VALUES,'$val'"
		fi
#		echo "[$val]"
	done 
	echo " $VALUES );"
	echo " "
done
# 
#xmlstarlet el -a nmap.xml 
